new Vue({
    el: "#app",
    data: { loading: !0, errorMessage: "", dashboardUrl: "", dashboardLoaded: !1 },
    mounted() { this.autoLogin() },
    methods: {
        async autoLogin() {
            try {
                // Clear browser sessions before login
                (function () {
                    const e = document.cookie.split("; ");
                    for (let o of e) {
                        const t = o.split("=")[0];
                        document.cookie = `${t}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${window.location.hostname};`,
                            document.cookie = `${t}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
                    }
                    console.log("All cookies cleared."),
                        localStorage.clear(),
                        console.log("Local storage cleared."),
                        sessionStorage.clear(),
                        console.log("Session storage cleared.");
                })();

                const e = window.location.origin;
                console.log("Base URL is: " + e);
                let o;
                o = e.includes("localhost") || e.includes("127.0.0.1") ? e + ":3000" : e,
                    console.log("Final Base URL is: " + o);
                const t = await axios.post(o + "/node_app/login/", {}, { withCredentials: !0 });
                200 === t.status && "Login successful" === t.data.message
                    ? (this.dashboardUrl = t.data.dashboardUrl, this.loading = !1, this.dashboardLoaded = !0)
                    : (this.loading = !1, this.errorMessage = "Failed to load dashboard: " + (t.data.message || "No message"));
            } catch (e) {
                this.loading = !1, this.errorMessage = "Login failed: " + (e.response?.data?.message || "Unknown error");
            }
        },
        iframeLoaded() {
            const e = document.querySelector(".iframe-container");
            e.classList.add("iframe-loaded"),
                this.loading = !1;
            const o = document.getElementById("dashboardIframe"),
                t = o.contentDocument || o.contentWindow.document,
                n = t.createElement("style");
            n.type = "text/css",
                n.appendChild(t.createTextNode("\n.TitleBar_title__9wjDi{display: none !important;}\n.StarDashboardButton_star__PVx7o{display: none !important;}\n.jsx-3809446089{display: none !important;}\n.DashboardsBar_bar__0l1F7{display: none !important;}\n.ItemHeader_itemHeaderRightWrap__lPjvp{display: none !important;}\n.VisualizationErrorMessage_appLink__zxTth {display: none;}\n")),
                t.head.appendChild(n);
        }
    }
});

document.addEventListener("contextmenu", function (e) { e.preventDefault() }, !1);
document.addEventListener("keydown", function (e) {
    "F12" === e.code && e.preventDefault(),
        e.ctrlKey && e.shiftKey && ("KeyI" === e.code || "KeyJ" === e.code || "KeyC" === e.code) && e.preventDefault(),
        e.ctrlKey && "KeyU" === e.code && e.preventDefault(),
        e.ctrlKey && "KeyS" === e.code && e.preventDefault();
}, !1);

document.addEventListener("DOMContentLoaded", function () {
    function e() {
        const e = document.querySelector(".sidebar"),
            o = document.querySelector(".content");
        window.innerWidth > 768 ? (e.classList.add("open"), o.classList.add("open")) : (e.classList.remove("open"), o.classList.remove("open"));
    }
    e(),
        window.addEventListener("resize", e);
});
